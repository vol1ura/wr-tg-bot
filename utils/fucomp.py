import os
import re
from fuzzywuzzy import process, fuzz
import pickle


def bot_compare(user_phrase, dictionary: list) -> bool:
    accost_bot = re.compile(r'(?i)\b–±–æ—Ç\b')
    user_str = str(user_phrase)
    if accost_bot.search(user_str):
        return process.extractOne(accost_bot.sub('', user_str), dictionary, scorer=fuzz.token_set_ratio)[1] >= 70
    else:
        return False


def best_answer(user_phrase, dictionary: list) -> str:
    return process.extractOne(re.sub(r'(?i)\b–±–æ—Ç\b,?', '', user_phrase).strip(), dictionary,
                              scorer=fuzz.token_set_ratio)[0]


# ======================= DICTIONARIES TO COMPARE =======================================================
phrases_instagram = [
    '–∏–Ω—Å—Ç–∞–≥—Ä–∞–º –±–µ–≥', 'instagram', '–ø–∏—à—É—Ç —Å–ø–æ—Ä—Ç—Å–º–µ–Ω—ã', '–ø–∏—à—É—Ç —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã', '—Å—Ç–∞—Ç—å—è –æ –±–µ–≥–µ',
    '–Ω–æ–≤–æ—Å—Ç—å –±–µ–≥', '–ø–æ—Å–ª–µ–¥–Ω –ø—É–±–ª–∏–∫–∞—Ü–∏', '–±–µ–≥–æ–≤–æ–π –±–ª–æ–≥', '–Ω–æ–≤–æ—Å—Ç—å –≤ –∫–∞–Ω–∞–ª–∞—Ö', '–Ω–æ–≤–æ—Å—Ç–∏ —Å–ø–æ—Ä—Ç–∞'
]

phrases_admin = [
    '–∞–¥–º–∏–Ω', '—Ç—É—Ç –≥–ª–∞–≤–Ω—ã–π –≤ —á–∞—Ç–µ', '–∞–¥–º–∏–Ω —á–∞—Ç–∞', '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', '–∫—Ç–æ –Ω–∞—á–∞–ª—å–Ω–∏–∫ —á–∞—Ç–∞', '–∫–æ–Ω—Ç–∞–∫—Ç –∞–¥–º–∏–Ω–∞',
    "–ø–æ–∑–æ–≤–∏ –∞–¥–º–∏–Ω–∞", '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä', "–º–æ–¥–µ—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞"
]

phrases_social = [
    '—Å–æ—Ü—Å–µ—Ç–∏ –∫–ª—É–±–∞', '—Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–ª—É–±', '–∫–ª—É–± –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ', '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª—É–±–µ', '–∫–ª—É–± –≤ vk', "–∫–ª—É–± –≤ —Ñ–µ–π—Å–±—É–∫",
    '–∫–ª—É–± –≤ —Å—Ç—Ä–∞–≤–µ'
]

phrases_weather = [
    '–ø–æ–≥–æ–¥–∞ –Ω–∞ —É–ª–∏—Ü–µ', '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ', '–ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã', "–∫–∞–∫–∞—è –ø–æ–≥–æ–¥–∞"
]

phrases_parkrun = [
    "—Ä–∞—Å—Å–∫–∞–∂–∏ –æ –ø–∞—Ä–∫—Ä–∞–Ω", "–Ω–æ–≤–æ—Å—Ç–∏ –æ –ø–∞—Ä–∫—Ä–∞–Ω", "—á—Ç–æ –∏–∑–≤–µ—Å—Ç–Ω–æ –æ –ø–∞—Ä–∫—Ä–∞–Ω", "–∫–æ–≥–¥–∞ –æ—Ç–∫—Ä–æ—é—Ç –ø–∞—Ä–∫—Ä–∞–Ω"
]

phrases_schedule = [
    "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∫–ª—É–±–∞", "—á–µ—Ç–≤–µ—Ä–≥–æ–≤—ã–µ", "–¥–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫",
    "–∫–æ–≥–¥–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞"
]

petristchev = [
    "–û–¥–Ω–∞ —Å–µ–º—å—è - –æ–¥–Ω–∞ –∫–æ–º–∞–Ω–¥–∞", "–ê –ü–µ—Ç—Ä–∏—â–µ–≤ –º–æ–ª–æ–¥–µ—Ü - –º–∞—Ä–∞—Ñ–æ–Ω –∑–∞ 2:50:40. –¢–∞–∫-—Ç–æ!", "–ü–µ—Ç—Ä–∏—â–µ–≤... —Ö–º )))",
    "–ö—É–¥–∞ –ø—Ä–æ–ø–∞–ª —ç—Ç–æ—Ç –ø–∞—Ä–µ–Ω—å? –ú–∞–∫—Å–∏–º –ü–µ—Ç—Ä–∏—â–µ–≤ –∏–∑ Wake&Run —Å –Ω–∞–¥–ø–∏—Å—å—é –Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–µ) –≤–µ—Å–µ–ª—ã–π!!!",
    "–ü–æ–º–Ω—é, –ø–æ–º–Ω—é, –±—ã–ª–æ —ç–ø–∏—á–Ω–æ - –ü–µ—Ç—Ä–∏—â–µ–≤ –≤ —Ç—Ä—É—Å–∞—Ö —Å —Ç–æ–ø–æ—Ä–æ–º –≤ –ö—É–∑–º–∏–Ω–∫–∞—Ö... –∞ —Å –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –ú–æ—Ç–æ—Ä–Ω—ã–π "
    "–≤ –∑–µ–ª–µ–Ω—ã—Ö –ª–æ—Å–∏–Ω–∞—Ö... —ç—Ç–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —Ä–∞–∑–≤–∏–¥–µ—Ç—å.", "–ü–µ—Ç—Ä–∏—â–µ–≤ –≤ —Ç—Ä—É—Å–∞—Ö - —ç—Ç–æ –≤–æ–æ–±—â–µ —Å–≤—è—Ç–æ–µ!",
    "–í—Å—ë –∂–¥—É, –∫–æ–≥–¥–∞ –º–æ–π –¥—Ä—É–≥ –ú–∞–∫—Å–∏–º –ü–µ—Ç—Ä–∏—â–µ–≤ - —á–µ–º–ø–∏–æ–Ω - –±—É–¥–µ—Ç –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–º –≤ –ö—É–∑—å–º–∏–Ω–∫–∞—Ö",
    "–ü–æ—á–µ–º—É –ü–µ—Ç—Ä–∏—â–µ–≤ —á–∞—Å—Ç–æ –±—ã–≤–∞–µ—Ç –¥–µ–≤–æ—á–∫–æ–π –Ω–∞ –∑–∞–±–µ–≥–∞—Ö? üòÉ –í—Å—ë –¥–µ–ª–æ –≤ –ø–µ—Ä–µ—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!!!", "–°–ª–æ–∂–Ω–æ, –µ—Å–ª–∏ —Ç—ã –Ω–µ –ü–µ—Ç—Ä–∏—â–µ–≤",
    "–ü–µ—Ç—Ä–∏—â–µ–≤ –≤–æ–æ–±—â–µ –∫–æ–≥–¥–∞ –Ω–∏–±—É–¥—å –ø–µ—à–∫–æ–º —Ö–æ–¥–∏—Ç?üòÖ", "–ê –∫–∞–∫ –±–µ–∂–∏—Ç –ü–µ—Ç—Ä–∏—â–µ–≤ —Ö–∑",
    "–ü–µ—Ç—Ä–∏—â–µ–≤ –æ–¥–Ω–æ –≤—Ä–µ–º—è –±–æ–ª—å—à–µ –≤—Å–µ—Ö –∫—Ä–∏—á–∞–ª, —á—Ç–æ –Ω–∏–∫–æ–≥–¥–∞ —Ç—Ä–µ–π–ª—ã –±–µ–≥–∞—Ç—å –Ω–µ –±—É–¥–µ—Ç, –∏ –≥–¥–µ –æ–Ω —Ç–µ–ø–µ—Ä—å???",
    "–ü–µ—Ç—Ä–∏—â–µ–≤ –≤—Å–µ–≥–¥–∞ —Å –Ω–∞–º–∏! üî•üî•üî•", "–ö—É—Ä–æ–ª–µ—Å–∏—Ç —É –Ω–∞—Å –ü–µ—Ç—Ä–∏—â–µ–≤)))", "–ì–æ–ª—ã–π –ü–µ—Ç—Ä–∏—â–µ–≤ –≤–µ–ª–∏–∫–æ–ª–µ–ø–µ–Ω!!!"
]

_utils_path = os.path.join(os.path.dirname(__file__), '../utils')

with open(os.path.join(_utils_path, 'message_base_wr.pkl'), 'rb') as f:
    message_base_wr = pickle.load(f)

with open(os.path.join(_utils_path, 'message_base_meschch.pkl'), 'rb') as f:
    message_base_m = pickle.load(f)
